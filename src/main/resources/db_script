/*==============================================================
   DATABASE: CB_DB (PostgreSQL Version)
   Description: Schema initialization and seed data
===============================================================*/

-- ==============================
-- 1. MASTER REFERENCE TABLES
-- ==============================

CREATE TABLE TBL_PRODUCT_SHT_CODE (
    PRODUCT VARCHAR(50) NOT NULL,
    PRD_SHT_CD VARCHAR(3) NOT NULL,
    CONSTRAINT PK_TBL_PRODUCT_SHT_CODE PRIMARY KEY (PRD_SHT_CD)
);

INSERT INTO TBL_PRODUCT_SHT_CODE (PRODUCT, PRD_SHT_CD)
VALUES
    ('LEGACY', 'LEG'),
    ('LAUNCH', 'LAU'),
    ('PLUS', 'PLU'),
    ('GOLD', 'GOL'),
    ('PARTIAL', 'PAR'),
    ('UNSECURED', 'UNS');


CREATE TABLE TBL_FEE_TYPE_SHT_CODE (
    FEE_TYPE VARCHAR(50) NOT NULL,
    FEE_TYPE_SHT_CD VARCHAR(2) NOT NULL,
    CONSTRAINT PK_TBL_FEE_TYPE_SHT_CODE PRIMARY KEY (FEE_TYPE_SHT_CD)
);

INSERT INTO TBL_FEE_TYPE_SHT_CODE (FEE_TYPE, FEE_TYPE_SHT_CD)
VALUES
    ('ANNUAL', 'AF'),
    ('MONTHLY', 'MF'),
    ('NO', 'NF');


CREATE TABLE TBL_REWARDS_TYPE_SHT_CODE (
    REWARDS_TYPE VARCHAR(50) NOT NULL,
    REWARDS_TYPE_SHT_CD VARCHAR(2) NOT NULL,
    CONSTRAINT PK_TBL_REWARDS_TYPE_SHT_CODE PRIMARY KEY (REWARDS_TYPE_SHT_CD)
);

INSERT INTO TBL_REWARDS_TYPE_SHT_CODE (REWARDS_TYPE, REWARDS_TYPE_SHT_CD)
VALUES
    ('PARTNER', 'PR'),
    ('CASH BACK', 'CB'),
    ('TRAVEL', 'TR'),
    ('POINTS', 'PT');


-- ==============================
-- 2. AUDIT TABLE
-- ==============================

CREATE TABLE TBL_AUDIT (
    AUDIT_ID SERIAL PRIMARY KEY,
    USERNAME VARCHAR(255),
    ACTION VARCHAR(255),
    UPDATED_TIME TIMESTAMP,
    NOTE VARCHAR(500)
);


-- ==============================
-- 3. PRODUCT TABLE
-- ==============================

CREATE TABLE TBL_PRODUCT (
    PRODUCT_ID VARCHAR(50) PRIMARY KEY,
    PRODUCT_SHT_CD VARCHAR(3) NOT NULL,
    FEE_TYPE_SHT_CD VARCHAR(2) NOT NULL,
    REWARDS_TYPE_SHT_CD VARCHAR(2) NOT NULL,
    APR_TYPE VARCHAR(50),
    PURCHASE_APR_TYPE VARCHAR(50),
    PURCHASE_APR_MIN NUMERIC(5,2),
    PURCHASE_APR_MAX NUMERIC(5,2),
    CASH_APR_TYPE VARCHAR(50) CHECK (CASH_APR_TYPE IN ('BAND', 'SPECIFIC')),
    CASH_APR_MIN NUMERIC(5,2),
    CASH_APR_MAX NUMERIC(5,2),
    CREDIT_LINE_MIN INT,
    CREDIT_LINE_MAX INT,
    SECURITY_DEPOSIT_VALUE INT,
    SECURITY_DEPOSIT_INDICATOR VARCHAR(1),
    DEPOSIT_MIN INT,
    DEPOSIT_MAX INT,
    TERMS_CONDITIONS VARCHAR(5000),
    CARDHOLDER_AGREEMENT VARCHAR(5000),
    CARD_IMAGE VARCHAR(500),
    STATUS VARCHAR(50),
    CREATED_BY VARCHAR(255),
    CREATED_DATETIME TIMESTAMP,
    REVIEWED_BY VARCHAR(255),
    REVIEWED_DATETIME TIMESTAMP,
    OVERRIDE_BY VARCHAR(100),
    OVERRIDE_DATETIME TIMESTAMP,
    OVERRIDE_JUSTIFICATION BYTEA,
    REVIEW_COMMENTS VARCHAR(1000),
    PRIN INT,
    CWS_PRODUCT_ID INT,
    CHA_CODE VARCHAR(4),
    BOARDING_INDICATOR VARCHAR(50)[],
    START_DATE TIMESTAMP,
    END_DATE TIMESTAMP,
    CONSTRAINT FK_PRODUCT_SHT FOREIGN KEY (PRODUCT_SHT_CD) REFERENCES TBL_PRODUCT_SHT_CODE(PRD_SHT_CD),
    CONSTRAINT FK_FEE_TYPE_SHT FOREIGN KEY (FEE_TYPE_SHT_CD) REFERENCES TBL_FEE_TYPE_SHT_CODE(FEE_TYPE_SHT_CD),
    CONSTRAINT FK_REWARDS_TYPE_SHT FOREIGN KEY (REWARDS_TYPE_SHT_CD) REFERENCES TBL_REWARDS_TYPE_SHT_CODE(REWARDS_TYPE_SHT_CD),
    CONSTRAINT CK_PURCHASE_APR_MIN CHECK (PURCHASE_APR_MIN BETWEEN 0 AND 99.99),
    CONSTRAINT CK_PURCHASE_APR_MAX CHECK (PURCHASE_APR_MAX BETWEEN 0 AND 99.99)
);


-- ==============================
-- 4. RANDOM DATA GENERATION
-- ==============================

DO $$
DECLARE
    i INT := 1;
    prd CHAR(3);
    fee CHAR(2);
    rew CHAR(2);
    pid VARCHAR(50);
    pmin NUMERIC(5,2);
    pmax NUMERIC(5,2);
BEGIN
    WHILE i <= 50 LOOP
        SELECT PRD_SHT_CD INTO prd FROM TBL_PRODUCT_SHT_CODE ORDER BY RANDOM() LIMIT 1;
        SELECT FEE_TYPE_SHT_CD INTO fee FROM TBL_FEE_TYPE_SHT_CODE ORDER BY RANDOM() LIMIT 1;
        SELECT REWARDS_TYPE_SHT_CD INTO rew FROM TBL_REWARDS_TYPE_SHT_CODE ORDER BY RANDOM() LIMIT 1;

        pid := prd || '-' || fee || '-' || rew || '-' || LPAD(i::TEXT, 7, '0');
        pmin := ROUND(((RANDOM() * 20) + 5)::numeric, 2);
        pmax := pmin + 10.00;

        INSERT INTO TBL_PRODUCT (
            PRODUCT_ID, PRODUCT_SHT_CD, FEE_TYPE_SHT_CD, REWARDS_TYPE_SHT_CD,
            APR_TYPE, PURCHASE_APR_TYPE, PURCHASE_APR_MIN, PURCHASE_APR_MAX,
            CASH_APR_TYPE, CASH_APR_MIN, CASH_APR_MAX,
            CREDIT_LINE_MIN, CREDIT_LINE_MAX, SECURITY_DEPOSIT_VALUE,
            SECURITY_DEPOSIT_INDICATOR, DEPOSIT_MIN, DEPOSIT_MAX,
            TERMS_CONDITIONS, CARDHOLDER_AGREEMENT, CARD_IMAGE,
            STATUS, CREATED_BY, CREATED_DATETIME, REVIEWED_BY, REVIEWED_DATETIME,
            OVERRIDE_BY, OVERRIDE_DATETIME, OVERRIDE_JUSTIFICATION, REVIEW_COMMENTS,
            PRIN, CWS_PRODUCT_ID, CHA_CODE, BOARDING_INDICATOR, START_DATE, END_DATE
        )
        VALUES (
            pid, prd, fee, rew,
            'STANDARD', 'FIXED', pmin, pmax,
            'BAND', pmin * 1.05, pmax * 1.05,
            500, 5000, 100,
            'Y', 100, 500,
            'Terms & Conditions Sample', 'Agreement Sample', 'ImagePath',
            'ACTIVE', 'SYSTEM', NOW(), 'REVIEWER', NOW(),
            'ADMIN', NOW(), '\\x00', 'OK',
            1, 10, 'A123', ARRAY['PC_FLAG1', 'PC_FLAG3', 'PC_FLAG5']::VARCHAR[], NOW(), NOW() + INTERVAL '1 year'
        );

        i := i + 1;
    END LOOP;
END$$;


-- ==============================
-- 5. POST-INSERT UPDATES
-- ==============================

UPDATE TBL_PRODUCT
SET PURCHASE_APR_MIN = CASE
    WHEN PURCHASE_APR_MIN < 5 THEN 5
    WHEN PURCHASE_APR_MIN > 50 THEN 50
    ELSE PURCHASE_APR_MIN
END;

UPDATE TBL_PRODUCT
SET CASH_APR_MIN = PURCHASE_APR_MIN * 1.05;

UPDATE TBL_PRODUCT
SET CASH_APR_MAX = PURCHASE_APR_MAX * 1.05
WHERE CASH_APR_TYPE = 'BAND';